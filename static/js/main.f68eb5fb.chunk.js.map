{"version":3,"sources":["components/contexts/ThemeContext.js","components/AppBar.js","components/AddTodo.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","themeColors","primary","cyan","lightTheme","createMuiTheme","palette","Object","objectSpread","type","background","paper","default","darkTheme","ThemeContextProvider","props","_useState","useState","theme","localStorage","getItem","themeType","_useState2","slicedToArray","setTheme","react_default","a","createElement","Provider","value","toggleTheme","setItem","children","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","lightBulbIcon","xmlns","width","height","viewBox","d","darkBulbIcon","SimpleAppBar","classes","_useContext","useContext","className","CssBaseline_default","AppBar","Toolbar","Typography","variant","IconButton","color","onClick","AddTodo","newTask","setNewTask","id","Box","display","p","bgcolor","TextField","required","onChange","e","target","placeholder","margin","fullWidth","autoComplete","InputLabelProps","shrink","InputProps","style","fontSize","marginTop","Fab","size","Add_default","addToTasks","TodoListItem","paddingTop","task","handleDelete","Clear_default","TodoList","localTasks","JSON","parse","tasks","setTasks","deleteTask","updatedTasks","filter","n","currentTarget","stringify","taskList","map","index","key","paddingBottom","Grid","container","item","xs","justify","Paper","length","align","components_AddTodo","concat","toConsumableArray","App","MuiThemeProvider","components_AppBar","position","top","components_TodoList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","contexts_ThemeContext","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f68eb5fb.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport cyan from '@material-ui/core/colors/cyan';\n\nexport const ThemeContext = createContext();\n\nconst themeColors = {\n    primary: cyan,\n};\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        ...themeColors,\n        type: 'light',\n        background: {\n            paper: '#f5f5f5',\n            default: \"#fff\",\n        }\n    }\n});\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        ...themeColors,\n        type: 'dark',\n        background: {\n            paper: '#333',\n            default: \"#212121\",\n        }\n    }\n});\n\nconst themeType = () => {\n    const theme = localStorage.getItem('theme');\n    return theme ? theme : 'dark';\n};\n\nconst ThemeContextProvider = (props) => {\n\n    const [theme, setTheme] = useState(themeType() === 'light' ? lightTheme : darkTheme);\n\n    const toggleTheme = () => {\n        if (theme.palette.type === 'light') {\n            setTheme(darkTheme);\n            localStorage.setItem('theme', 'dark');\n        } else {\n            setTheme(lightTheme);\n            localStorage.setItem('theme', 'light');\n        }\n    };\n\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            {props.children}\n        </ThemeContext.Provider>\n    );\n};\n\nexport default ThemeContextProvider;\n","import React, {useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst lightBulbIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\"/></svg>;\nconst darkBulbIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"m9,21c0,0.55 0.45,1 1,1l4,0c0.55,0 1,-0.45 1,-1l0,-1l-6,0l0,1zm3,-19c-3.86,0 -7,3.14 -7,7c0,2.38 1.19,4.47 3,5.74l0,2.26c0,0.55 0.45,1 1,1l6,0c0.55,0 1,-0.45 1,-1l0,-2.26c1.81,-1.27 3,-3.36 3,-5.74c0,-3.86 -3.14,-7 -7,-7z\"/></svg>;\n\nfunction SimpleAppBar() {\n    const classes = useStyles();\n    const { theme, toggleTheme } = useContext(ThemeContext);\n\n    const ThemeIndicator = () => {\n        if (theme.palette.type === 'light')\n            return lightBulbIcon;\n        else\n            return darkBulbIcon;\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBar>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        To Do List\n                    </Typography>\n                    <IconButton color=\"inherit\" onClick={toggleTheme}>\n                        <ThemeIndicator/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default SimpleAppBar;\n","import React, {useState} from \"react\";\nimport './css/AddTodo.css'\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Box from '@material-ui/core/Box';\n\nfunction AddTodo(props) {\n    const [newTask, setNewTask] = useState(\"\");\n\n    const addTask = () => {\n        if (newTask !== '') {\n            props.addToTasks(newTask);\n            setNewTask(\"\");\n        }\n    };\n\n    return (\n        <div id=\"form-paper\">\n            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n                <Box p={1} flexGrow={1}>\n                    <TextField\n                        type=\"text\"\n                        required={true}\n                        value={newTask}\n                        onChange={(e) => setNewTask(e.target.value)}\n                        placeholder=\"What to do...?\"\n                        margin=\"none\"\n                        fullWidth\n                        autoComplete='off'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        InputProps={{\n                            style: { fontSize: 18 }\n                        }}\n                        style={{ marginTop: 15 }}\n                    />\n                </Box>\n                <Box p={1}>\n                    <Fab size=\"medium\" color=\"primary\">\n                        <AddIcon onClick={addTask}/>\n                    </Fab>\n                </Box>\n            </Box>\n        </div>\n    );\n}\n\nexport default AddTodo;\n","import React, { useState } from 'react';\nimport './css/TodoList.css'\nimport 'typeface-roboto';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddTodo from \"./AddTodo\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction TodoListItem(props) {\n    return (\n        <li>\n            <div style={{ width: '100%' }}>\n                <Box display=\"flex\">\n                    <Box flexGrow={1}>\n                        <Typography variant=\"body1\" style={{ paddingTop: 12 }}>\n                            {props.task}\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <IconButton onClick={props.handleDelete} value={props.task}>\n                            <ClearIcon/>\n                        </IconButton>\n                    </Box>\n                </Box>\n            </div>\n        </li>\n    );\n}\n\nfunction TodoList() {\n    const [tasks, setTasks] = useState(() => {\n        const localTasks = localStorage.getItem('tasks');\n        return localTasks ? JSON.parse(localTasks) : []\n    });\n\n    const addToTasks = (newTask) => {\n        setTasks([...tasks, newTask]);\n        localStorage.setItem('tasks', JSON.stringify([...tasks, newTask]));\n    };\n\n    const deleteTask = (task) => {\n        let updatedTasks = tasks.filter(n => task.currentTarget.value !== n);\n        setTasks(updatedTasks);\n        localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    };\n\n    const taskList = tasks.map((task, index) => <TodoListItem key={index}\n                                                              task={task}\n                                                              index={index}\n                                                              handleDelete={deleteTask} />);\n    const RenderTaskList = () => {\n        if (taskList.length === 0)\n            return <Typography variant=\"h6\" align=\"center\">Yay! Nothing to do for now!</Typography>;\n        else\n            return <ul>{taskList}</ul>;\n    };\n\n    return(\n        <div style={{ paddingBottom: 80 }}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\">\n                        <Paper id=\"list-paper\">\n                            <RenderTaskList/>\n                        </Paper>\n                        <AddTodo addToTasks={addToTasks}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default TodoList;\n","import React, {useContext} from \"react\";\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { ThemeContext } from \"./components/contexts/ThemeContext\";\nimport SimpleAppBar from \"./components/AppBar\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n    const { theme } = useContext(ThemeContext);\n\n    return (\n        <div style={{ paddingTop: 56 }}>\n            <MuiThemeProvider theme={theme}>\n                <SimpleAppBar style={{ position: 'fixed', top: 0 }} />\n                <TodoList/>\n            </MuiThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport ThemeContextProvider from \"./components/contexts/ThemeContext\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <ThemeContextProvider>\n        <App/>\n    </ThemeContextProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}